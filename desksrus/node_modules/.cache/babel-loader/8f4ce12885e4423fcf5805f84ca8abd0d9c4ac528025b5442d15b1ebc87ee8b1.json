{"ast":null,"code":"var _jsxFileName = \"/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/OrdersScreen/OrderScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Badge, Button, Card, ListGroup, Spinner } from 'react-bootstrap';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem('token');\nconst getOrders = async () => await (await fetch('http://localhost:8000/orders', {\n  headers: {\n    'Content-Type': 'application/json',\n    'token': `${token}`\n  }\n})).json();\nconst OrderScreen = _ref => {\n  _s();\n  let {\n    isAdmin\n  } = _ref;\n  const [orderList, setOrderList] = useState([]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('orders', getOrders);\n\n  // data && setOrderList4\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        height: '75vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  const handleClick = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      as: \"li\",\n      className: \"d-block justify-content-between align-items-start\",\n      children: data === null || data === void 0 ? void 0 : data.map(order => /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"d-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"$\", order.totalamount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), order.status === 'Completed' ? /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"success\",\n            children: \"Success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 47\n          }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n            bg: \"warning\",\n            children: order.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 85\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: async e => {\n              e.preventDefault();\n              await fetch(`http://localhost:8000/admin/changeorder/${order.id}`, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  status: order.status\n                })\n              });\n              window.location.reload();\n            },\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n          className: \"mb-2 text-muted\",\n          children: [\"$\", order.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Card.Link, {\n            href: `/orders/${order.id}/${order.date}`,\n            children: \"View More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderScreen, \"NXgZUoKLSU+6wEqb207Uf/FCwZw=\", false, function () {\n  return [useQuery];\n});\n_c = OrderScreen;\nexport default OrderScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["React","useState","Badge","Button","Card","ListGroup","Spinner","useQuery","token","localStorage","getItem","getOrders","fetch","headers","json","OrderScreen","isAdmin","orderList","setOrderList","data","isLoading","error","height","handleClick","e","preventDefault","map","order","totalamount","status","id","method","body","JSON","stringify","window","location","reload","date"],"sources":["/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/OrdersScreen/OrderScreen.tsx"],"sourcesContent":["import React, { SyntheticEvent, useState } from 'react'\nimport { Badge, Button, Card, ListGroup, Spinner } from 'react-bootstrap';\nimport { SyntheticEventData } from 'react-dom/test-utils';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport OrderScreenItem from '../OrderScreenItem/OrderScreenItem';\n\ninterface Props {\n  setAuth: (isAuthenticated: boolean) => void;\n}\n\nexport type OrderType = {\n  id: number;\n  totalamount: number;\n  date: string;\n  status: string;\n}\n\nconst token = localStorage.getItem('token');\nconst getOrders = async (): Promise<OrderType[]> => await (await fetch('http://localhost:8000/orders', {headers: { 'Content-Type': 'application/json', 'token': `${token}` }})).json();\n\nconst OrderScreen = ({isAdmin}: any) => {\n  const [orderList, setOrderList] = useState<OrderType[]>([] as OrderType[]);\n  const { data, isLoading, error } = useQuery<OrderType[]>('orders', getOrders);\n\n  // data && setOrderList4\n\n  if (isLoading) {\n    return (\n      <div className='d-flex justify-content-center align-items-center' style={{ height: '75vh' }}>\n        <Spinner animation=\"border\" />\n      </div>\n    )\n  }\n  if (error) return <div>Something went wrong...</div>\n\n  const handleClick = (e: SyntheticEvent) => {\n      e.preventDefault();\n      \n  }\n\n  return (\n    <ListGroup>\n      <ListGroup.Item\n        as=\"li\"\n        className=\"d-block justify-content-between align-items-start\"\n      >\n        {data?.map(order => (\n          <Card.Body className='d-block' key={order.id}>\n            <div className='d-flex justify-content-between'>\n              <Card.Title>${order.totalamount}</Card.Title>\n              {order.status === 'Completed' ? <Badge bg=\"success\">Success</Badge> : <Badge bg=\"warning\">{order.status}</Badge>}\n              <Button onClick={async (e: SyntheticEvent) => { \n                e.preventDefault(); \n                await fetch(`http://localhost:8000/admin/changeorder/${order.id}`, {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify({\n                    status: order.status\n                  })})\n                  window.location.reload();\n                }}>Change</Button>\n            </div>\n            <Card.Subtitle className=\"mb-2 text-muted\">${order.date}</Card.Subtitle>\n            <div>\n              <Card.Link href={`/orders/${order.id}/${order.date}`}>View More</Card.Link>\n            </div>\n          </Card.Body>\n        ))}\n      </ListGroup.Item>\n    </ListGroup>\n  )\n}\n\nexport default OrderScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}