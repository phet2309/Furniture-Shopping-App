{"ast":null,"code":"var _jsxFileName = \"/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/LoginScreen.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = _ref => {\n  _s();\n  let {\n    setAuth,\n    setIsAdmin\n  } = _ref;\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const submitHandler = async e => {\n    e.preventDefault();\n    const res = await fetch('http://localhost:8000/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    const parseRes = await res.json();\n    if (parseRes.token) {\n      localStorage.setItem(\"token\", parseRes.token);\n      localStorage.setItem(\"isAdmin\", parseRes.isAdmin);\n      if (parseRes.isAdmin) setIsAdmin(true);\n    } else {\n      setAuth(false);\n      toast.error(parseRes);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"my-3\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicCheckbox\",\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          label: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["useState","Form","Button","FormContainer","ToastContainer","toast","LoginScreen","setAuth","setIsAdmin","email","setEmail","password","setPassword","submitHandler","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","parseRes","json","token","localStorage","setItem","isAdmin","error","target","value"],"sources":["/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/LoginScreen.tsx"],"sourcesContent":["import { SyntheticEvent, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\ninterface Props {\n  setAuth: (isAuthenticated : boolean) => void;\n  setIsAdmin: (isAdmin: boolean) => void;\n}\n\nconst LoginScreen = ({setAuth, setIsAdmin} : Props) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submitHandler = async (e:SyntheticEvent) => {\n    e.preventDefault();\n    const res = await fetch('http://localhost:8000/auth/login', {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: email,\n        password: password \n      })\n    });\n\n    const parseRes = await res.json();\n    if (parseRes.token) {\n      localStorage.setItem(\"token\", parseRes.token);\n      localStorage.setItem(\"isAdmin\", parseRes.isAdmin)\n      if(parseRes.isAdmin) setIsAdmin(true)\n    } else {\n      setAuth(false);\n      toast.error(parseRes);\n    }\n\n  }\n\n\n  return (\n    <FormContainer>\n      <h1>Login</h1>\n      <Form className=\"my-3\" onSubmit={submitHandler}>\n        <Form.Group className=\"mb-3\" controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control \n            type=\"email\" \n            placeholder=\"Enter email\" \n            value={email}\n            onChange={(e) => setEmail(e.target.value)} />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)} />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Check me out\" />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n      <ToastContainer />\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}