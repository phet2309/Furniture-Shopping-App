{"ast":null,"code":"var _jsxFileName = \"/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/ProductDetailScreen/ProductDetailScreen.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport './ProductDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getProduct = async id => await (await fetch(`https://fakestoreapi.com/products/${id}`)).json();\nconst ProductDetailScreen = _ref => {\n  _s();\n  let {\n    setAuth\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery(`queryKey${id}`, async () => await getProduct({\n    id: string\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://talksport.com/wp-content/uploads/sites/5/2022/10/crop-1208117.jpg?strip=all&quality=100&w=1920&h=1080&crop=1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Image Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"I am a passionate software builder and technology enthusiast. I identify myself as a learner of this never ending evolution, which concentrates on software development efficiency. I have worked as Software Engineer at BlueOptima. I learned about understandable code writing , efficiency and innovation in programming. I took part in sprint planning, progress review and sprint review meetings. I worked on feature creation and analysis, bug resolve, unit and integration tests, query optimization, support tickets and improved CI/CD pipeline Jenkins script. I have also worked in freelancing project previously, in which I used Python Django and PostgreSQL database. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"26$\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        children: \"Add to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductDetailScreen, \"7y6VtKspl5tE1NTfwFWEn5Z2t7Y=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = ProductDetailScreen;\nexport default ProductDetailScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductDetailScreen\");","map":{"version":3,"names":["React","Button","useQuery","useParams","getProduct","id","fetch","json","ProductDetailScreen","setAuth","data","isLoading","error","string"],"sources":["/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/ProductDetailScreen/ProductDetailScreen.tsx"],"sourcesContent":["import React from 'react'\nimport { Button } from 'react-bootstrap';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport { CartItemType } from '../StoreScreen/StoreScreen';\nimport './ProductDetail.css';\n\ninterface Props {\n    setAuth: (isAuthenticated: boolean) => void;\n}\n\nconst getProduct = async (id : string): Promise<CartItemType> => await (await fetch(`https://fakestoreapi.com/products/${id}`)).json();\n\nconst ProductDetailScreen = ({ setAuth }: Props) => {\n    const {id} : {id: string} = useParams();\n    const {data, isLoading, error} = useQuery<CartItemType>(`queryKey${id}`, async () => await getProduct({id: string}));\n    return (\n        <div className='product'>\n            <img src='https://talksport.com/wp-content/uploads/sites/5/2022/10/crop-1208117.jpg?strip=all&quality=100&w=1920&h=1080&crop=1' />\n            <div className='details'>\n                <h3>Image Title</h3>\n                <p>I am a passionate software builder and technology enthusiast. I identify myself as a learner of this never ending evolution, which concentrates on software development efficiency. I have worked as Software Engineer at BlueOptima. I learned about understandable code writing , efficiency and innovation in programming. I took part in sprint planning, progress review and sprint review meetings. I worked on feature creation and analysis, bug resolve, unit and integration tests, query optimization, support tickets and improved CI/CD pipeline Jenkins script. I have also worked in freelancing project previously, in which I used Python Django and PostgreSQL database. </p>\n                <h3>26$</h3>\n                <Button variant=\"primary\">Add to cart</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductDetailScreen;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAO,qBAAqB;AAAC;AAM7B,MAAMC,UAAU,GAAG,MAAOC,EAAW,IAA4B,MAAM,CAAC,MAAMC,KAAK,CAAE,qCAAoCD,EAAG,EAAC,CAAC,EAAEE,IAAI,EAAE;AAEtI,MAAMC,mBAAmB,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EAC3C,MAAM;IAACJ;EAAiB,CAAC,GAAGF,SAAS,EAAE;EACvC,MAAM;IAACO,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAAgB,WAAUG,EAAG,EAAC,EAAE,YAAY,MAAMD,UAAU,CAAC;IAACC,EAAE,EAAEQ;EAAM,CAAC,CAAC,CAAC;EACpH,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAK,GAAG,EAAC;IAAsH;MAAA;MAAA;MAAA;IAAA,QAAG,eAClI;MAAK,SAAS,EAAC,SAAS;MAAA,wBACpB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkqB,eAClqB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY,eACZ,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC5C;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GAdKL,mBAAmB;EAAA,QACOL,SAAS,EACJD,QAAQ;AAAA;AAAA,KAFvCM,mBAAmB;AAgBzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}