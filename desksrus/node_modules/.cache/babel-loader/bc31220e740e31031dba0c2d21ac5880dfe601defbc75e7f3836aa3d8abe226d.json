{"ast":null,"code":"var _jsxFileName = \"/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/StatasticsScreen/StatisticsScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StatisticsScreen() {\n  _s();\n  const [metric, setMetric] = useState('highestSold');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [res, setRes] = useState([]);\n  const [firstView, setFirstView] = useState(true);\n  const submitHandler = async e => {\n    e.preventDefault();\n    let endPoint;\n    switch (metric) {\n      default:\n      case 'highestSold':\n        endPoint = 'highestsold';\n        break;\n      case 'highestSoldCustom':\n        endPoint = 'highestsoldcustom';\n        break;\n      case 'topTenCustom':\n        endPoint = 'bestcustomers';\n        break;\n      case 'zip':\n        endPoint = 'zip';\n        break;\n      case 'avgSell':\n        endPoint = 'type';\n        break;\n    }\n    ;\n    console.log(endPoint);\n    const res = await fetch('http://localhost:8000/admin/' + endPoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        startDate,\n        endDate\n      })\n    });\n    const parseRes = await res.json();\n    if (res.status === 200) {\n      setRes(parseRes);\n      if (firstView) setFirstView(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          id: \"1\",\n          label: \"Highest Sold Products\",\n          onChange: e => setMetric('highestSold'),\n          checked: metric === 'highestSold'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          id: \"2\",\n          label: \"Highest Sold Products to Distinct Customers\",\n          onChange: e => setMetric('highestSoldCustom'),\n          checked: metric === 'highestSoldCustom'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          id: \"3\",\n          label: \"Top 10 customers\",\n          onChange: e => setMetric('topTenCustom'),\n          checked: metric === 'topTenCustom'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          id: \"4\",\n          label: \"Best Zip Codes\",\n          onChange: e => setMetric('zip'),\n          checked: metric === 'zip'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          id: \"5\",\n          label: \"Average Selling Products\",\n          onChange: e => setMetric('avgSell'),\n          checked: metric === 'avgSell'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"startDate\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            placeholder: \"Enter startDate\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"endDate\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"date\",\n            placeholder: \"endDate\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), !firstView && /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: res.map(ele => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n_s(StatisticsScreen, \"GkiZ1H28YrPO//qhFFT0T9qnjp4=\");\n_c = StatisticsScreen;\nexport default StatisticsScreen;\nvar _c;\n$RefreshReg$(_c, \"StatisticsScreen\");","map":{"version":3,"names":["React","useState","Button","Form","Table","StatisticsScreen","metric","setMetric","startDate","setStartDate","endDate","setEndDate","res","setRes","firstView","setFirstView","submitHandler","e","preventDefault","endPoint","console","log","fetch","method","headers","body","JSON","stringify","parseRes","json","status","target","value","map","ele","field","total"],"sources":["/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/StatasticsScreen/StatisticsScreen.tsx"],"sourcesContent":["import React, { SyntheticEvent, useState } from 'react'\nimport { Button, Form, Table } from 'react-bootstrap';\n\ntype adminDisplayType = {\n  field: string;\n  total: number;\n}\n\nfunction StatisticsScreen() {\n  const [metric, setMetric] = useState('highestSold');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [res, setRes] = useState([]);\n  const [firstView, setFirstView] = useState(true);\n\n\n\n  const submitHandler = async (e: SyntheticEvent) => {\n    e.preventDefault();\n    let endPoint;\n\n    switch (metric) {\n      default:\n      case 'highestSold':\n        endPoint = 'highestsold'\n        break;\n      case 'highestSoldCustom':\n        endPoint = 'highestsoldcustom'\n        break;\n      case 'topTenCustom':\n        endPoint = 'bestcustomers'\n        break;\n      case 'zip':\n        endPoint = 'zip'\n        break;\n      case 'avgSell':\n        endPoint = 'type'\n        break;\n    };\n\n    console.log(endPoint);\n    const res = await fetch('http://localhost:8000/admin/' + endPoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        startDate,\n        endDate\n      })\n    });\n\n    const parseRes = await res.json();\n    if(res.status===200) {\n      setRes(parseRes);\n      if(firstView) setFirstView(false);\n    }\n  }\n\n  return (\n    <>\n      <Form onSubmit={submitHandler}>\n        <div className=\"mb-3\" >\n          <Form.Check\n            type='radio'\n            id='1'\n            label='Highest Sold Products'\n            onChange={(e) => setMetric('highestSold')}\n            checked={metric === 'highestSold'}\n          />\n\n          <Form.Check\n            type='radio'\n            id='2'\n            label='Highest Sold Products to Distinct Customers'\n            onChange={(e) => setMetric('highestSoldCustom')}\n            checked={metric === 'highestSoldCustom'}\n          />\n\n          <Form.Check\n            type='radio'\n            id='3'\n            label='Top 10 customers'\n            onChange={(e) => setMetric('topTenCustom')}\n            checked={metric === 'topTenCustom'}\n          />\n\n          <Form.Check\n            type='radio'\n            id='4'\n            label='Best Zip Codes'\n            onChange={(e) => setMetric('zip')}\n            checked={metric === 'zip'}\n          />\n\n          <Form.Check\n            type='radio'\n            id='5'\n            label='Average Selling Products'\n            onChange={(e) => setMetric('avgSell')}\n            checked={metric === 'avgSell'}\n          />\n\n          <Form.Group className=\"mb-3\" controlId=\"startDate\">\n            <Form.Label>Start Date</Form.Label>\n            <Form.Control type=\"date\" placeholder=\"Enter startDate\" value={startDate}\n              onChange={(e) => setStartDate(e.target.value)} />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"endDate\">\n            <Form.Label>End Date</Form.Label>\n            <Form.Control type=\"date\" placeholder=\"endDate\" value={endDate}\n              onChange={(e) => setEndDate(e.target.value)} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </div>\n      </Form>\n      {!firstView && (<Table striped bordered hover size=\"sm\">\n        <thead>\n          <tr>\n            <th>Field</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          {res.map((ele: adminDisplayType) =>\n            <tr>\n              <td>{ele.field}</td>\n              <td>{ele.total}</td>\n            </tr>\n          )}\n        </tbody>\n      </Table>)}\n    </>\n  )\n}\n\nexport default StatisticsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}