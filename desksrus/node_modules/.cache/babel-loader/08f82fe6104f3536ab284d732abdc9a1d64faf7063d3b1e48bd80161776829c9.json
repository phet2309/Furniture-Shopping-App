{"ast":null,"code":"var _jsxFileName = \"/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/StoreScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getProducts = async () => await (await fetch('https://fakestoreapi.com/products')).json();\nconst StoreScreen = _ref => {\n  _s();\n  let {\n    setAuth\n  } = _ref;\n  const [cartItems, setCartItems] = useState([]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getProducts);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"StoreScreen1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreScreen, \"/y55Rr0xkyZEh4lVBo/kj6VmQvM=\", false, function () {\n  return [useQuery];\n});\n_c = StoreScreen;\nexport default StoreScreen;\nvar _c;\n$RefreshReg$(_c, \"StoreScreen\");","map":{"version":3,"names":["React","useState","useQuery","getProducts","fetch","json","StoreScreen","setAuth","cartItems","setCartItems","data","isLoading","error","console","log"],"sources":["/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/StoreScreen.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { useQuery } from 'react-query';\n\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\ninterface Props {\n  setAuth: (isAuthenticated : boolean) => void;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> => await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst StoreScreen = ({ setAuth }: Props) => {\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const {data, isLoading, error} = useQuery<CartItemType[]>('products', getProducts);\n  console.log(data);\n\n  return (\n    <div>StoreScreen1</div>\n  )\n}\n\nexport default StoreScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,aAAa;AAAC;AAgBvC,MAAMC,WAAW,GAAG,YAAqC,MAAM,CAAC,MAAMC,KAAK,CAAC,mCAAmC,CAAC,EAAEC,IAAI,EAAE;AAExH,MAAMC,WAAW,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAmB;EAChE,MAAM;IAACS,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAAiB,UAAU,EAAEC,WAAW,CAAC;EAClFU,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAEjB,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAuB;AAE3B,CAAC;AAAA,GARKJ,WAAW;EAAA,QAEkBJ,QAAQ;AAAA;AAAA,KAFrCI,WAAW;AAUjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}