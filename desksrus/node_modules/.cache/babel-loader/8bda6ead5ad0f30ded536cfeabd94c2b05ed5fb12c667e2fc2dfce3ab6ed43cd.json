{"ast":null,"code":"var _jsxFileName = \"/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/TransactionsScreens/TransactionScreen.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Badge, Card, ListGroup, Spinner } from 'react-bootstrap';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getTransactions = async () => {\n  const token = localStorage.getItem('token');\n  const header = {\n    'token': `${token}`\n  };\n  return await (await fetch('http://localhost:8000/transactions', {\n    headers: header\n  })).json();\n};\nconst TransactionScreen = () => {\n  _s();\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('transactions', getTransactions);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center align-items-center\",\n      style: {\n        height: '75vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        as: \"li\",\n        children: data === null || data === void 0 ? void 0 : data.map(transaction => /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"d-block\",\n          style: {\n            margin: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: [\"$\", transaction.totalamount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), transaction.tstatus === 'Completed' ? /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"success\",\n              children: \"Success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 54\n            }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"warning\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 92\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n            className: \"mb-2 text-muted\",\n            children: [\"$\", transaction.tdate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(TransactionScreen, \"Z3b93vmhJEnCPN4ovcxRGbOtffM=\", false, function () {\n  return [useQuery];\n});\n_c = TransactionScreen;\nexport default TransactionScreen;\nvar _c;\n$RefreshReg$(_c, \"TransactionScreen\");","map":{"version":3,"names":["React","Badge","Card","ListGroup","Spinner","useQuery","getTransactions","token","localStorage","getItem","header","fetch","headers","json","TransactionScreen","data","isLoading","error","height","map","transaction","margin","totalamount","tstatus","tdate"],"sources":["/Users/hetpatel/Documents/NJIT/Fall '22/DMSD/Projects/desksrus/src/screens/TransactionsScreens/TransactionScreen.tsx"],"sourcesContent":["import React from 'react'\nimport { Badge, Card, ListGroup, Spinner } from 'react-bootstrap';\nimport { useQuery } from 'react-query';\n\ninterface Props {\n  setAuth: (isAuthenticated: boolean) => void;\n}\n\ntype TransactionType = {\n  transactionid: number;\n  tstatus: string;\n  tdate: string;\n  totalamount: number;\n}\n\nconst getTransactions = async (): Promise<TransactionType[]> => {\n  const token = localStorage.getItem('token');\n  const header = { 'token': `${token}` };\n  return await (await fetch('http://localhost:8000/transactions', { headers: header })).json();\n}\n\n\nconst TransactionScreen = () => {\n  const { data, isLoading, error } = useQuery<TransactionType[]>('transactions', getTransactions);\n\n  if (isLoading) {\n    return (\n      <div className='d-flex justify-content-center align-items-center' style={{ height: '75vh' }}>\n        <Spinner animation=\"border\" />\n      </div>\n    )\n  }\n  if (error) return <div>Something went wrong...</div>\n\n\n  return (\n    <>\n    <ListGroup>\n      <ListGroup.Item\n        as=\"li\"\n      >\n        {data?.map(transaction => (\n          <Card.Body className='d-block' style={{ margin: '1rem' }}>\n            <div className='d-flex justify-content-between'>\n              <Card.Title>${transaction.totalamount}</Card.Title>\n              {transaction.tstatus === 'Completed' ? <Badge bg=\"success\">Success</Badge> : <Badge bg=\"warning\">Pending</Badge>}\n            </div>\n            <Card.Subtitle className=\"mb-2 text-muted\">${transaction.tdate}</Card.Subtitle>\n            {/* <div>\n              <Card.Link href={`/transaction/${transaction.transactionid}`}>View More</Card.Link>\n            </div> */}\n          </Card.Body>\n        ))}\n      </ListGroup.Item>\n    </ListGroup>\n    </>\n  )\n}\n\nexport default TransactionScreen;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAEC,OAAO,QAAQ,iBAAiB;AACjE,SAASC,QAAQ,QAAQ,aAAa;AAAC;AAAA;AAavC,MAAMC,eAAe,GAAG,YAAwC;EAC9D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,MAAM,GAAG;IAAE,OAAO,EAAG,GAAEH,KAAM;EAAE,CAAC;EACtC,OAAO,MAAM,CAAC,MAAMI,KAAK,CAAC,oCAAoC,EAAE;IAAEC,OAAO,EAAEF;EAAO,CAAC,CAAC,EAAEG,IAAI,EAAE;AAC9F,CAAC;AAGD,MAAMC,iBAAiB,GAAG,MAAM;EAAA;EAC9B,MAAM;IAAEC,IAAI;IAAEC,SAAS;IAAEC;EAAM,CAAC,GAAGZ,QAAQ,CAAoB,cAAc,EAAEC,eAAe,CAAC;EAE/F,IAAIU,SAAS,EAAE;IACb,oBACE;MAAK,SAAS,EAAC,kDAAkD;MAAC,KAAK,EAAE;QAAEE,MAAM,EAAE;MAAO,CAAE;MAAA,uBAC1F,QAAC,OAAO;QAAC,SAAS,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAC1B;EAEV;EACA,IAAID,KAAK,EAAE,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAkC;EAGpD,oBACE;IAAA,uBACA,QAAC,SAAS;MAAA,uBACR,QAAC,SAAS,CAAC,IAAI;QACb,EAAE,EAAC,IAAI;QAAA,UAENF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,GAAG,CAACC,WAAW,iBACpB,QAAC,IAAI,CAAC,IAAI;UAAC,SAAS,EAAC,SAAS;UAAC,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAO,CAAE;UAAA,wBACvD;YAAK,SAAS,EAAC,gCAAgC;YAAA,wBAC7C,QAAC,IAAI,CAAC,KAAK;cAAA,gBAAGD,WAAW,CAACE,WAAW;YAAA;cAAA;cAAA;cAAA;YAAA,QAAc,EAClDF,WAAW,CAACG,OAAO,KAAK,WAAW,gBAAG,QAAC,KAAK;cAAC,EAAE,EAAC,SAAS;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAgB,gBAAG,QAAC,KAAK;cAAC,EAAE,EAAC,SAAS;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAgB;UAAA;YAAA;YAAA;YAAA;UAAA,QAC5G,eACN,QAAC,IAAI,CAAC,QAAQ;YAAC,SAAS,EAAC,iBAAiB;YAAA,gBAAGH,WAAW,CAACI,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAiB;QAAA;UAAA;UAAA;UAAA;QAAA,QAKlF;MAAC;QAAA;QAAA;QAAA;MAAA;IACa;MAAA;MAAA;MAAA;IAAA;EACP,iBACT;AAEP,CAAC;AAAA,GAnCKV,iBAAiB;EAAA,QACcT,QAAQ;AAAA;AAAA,KADvCS,iBAAiB;AAqCvB,eAAeA,iBAAiB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}